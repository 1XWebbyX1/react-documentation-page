{"version":3,"sources":["components/articles/article05.jsx"],"names":["Jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","class","React","Component"],"mappings":"6JAGMA,mLAEF,OACIC,EAAAC,EAAAC,cAAA,WAASC,GAAG,sBAAsBC,MAAM,gBAC5CJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,WAAd,uBAEAJ,EAAAC,EAAAC,cAAA,2DAEAF,EAAAC,EAAAC,cAAA,uDAC2CF,EAAAC,EAAAC,cAAA,2BAD3C,wEAGAF,EAAAC,EAAAC,cAAA,yDAC6CF,EAAAC,EAAAC,cAAA,uBAD7C,sHAGAF,EAAAC,EAAAC,cAAA,qDACyCF,EAAAC,EAAAC,cAAA,4BADzC,wGAdcG,IAAMC,WAsBTP","file":"static/js/6.6eef025e.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Jsx extends React.Component{\n  render(){\n    return (\n        <section id=\"Declaring_variables\" class=\"main-section\">\n    <header class=\"header6\">Declaring variables</header>\n\n    <article>\n    You can declare a variable in three ways:\n    <p>\n    With the keyword var. For example,         <code>{`var x = 42.`}</code> This syntax can be used to declare both local and global variables.\n    </p>\n    <p>\n    By simply assigning it a value. For example, <code>{`x = 42.`}</code> This always declares a global variable. It generates a strict JavaScript warning. You shouldn't use this variant.\n    </p>\n    <p>\n    With the keyword let. For example,       <code>{` let y = 13.`}</code> This syntax can be used to declare a block scope local variable. See Variable scope below.\n    </p>\n    </article>\n    </section>);\n  }\n}\n\nexport default Jsx;\n"],"sourceRoot":""}