{"version":3,"sources":["components/articles/article04.jsx"],"names":["Jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","class","React","Component"],"mappings":"uJAGMA,mLAEF,OACEC,EAAAC,EAAAC,cAAA,WAASC,GAAG,YAAYC,MAAM,gBAChCJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,WAAd,aAEAJ,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,sJAGAF,EAAAC,EAAAC,cAAA,mSAGAF,EAAAC,EAAAC,cAAA,kPAbcG,IAAMC,WAwBTP","file":"static/js/5.f93cf17b.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Jsx extends React.Component{\n  render(){\n    return(\n      <section id=\"Variables\" class=\"main-section\">\n    <header class=\"header5\">Variables</header>\n\n    <article>\n    <p>\n    You use variables as symbolic names for values in your application. The names of variables, called identifiers, conform to certain rules.\n    </p>\n    <p>\n    A JavaScript identifier must start with a letter, underscore (_), or dollar sign ($); subsequent characters can also be digits (0-9). Because JavaScript is case sensitive, letters include the characters \"A\" through \"Z\" (uppercase) and the characters \"a\" through \"z\" (lowercase).\n    </p>\n    <p>\n    You can use ISO 8859-1 or Unicode letters such as å and ü in identifiers. You can also use the Unicode escape sequences as characters in identifiers.\n\n    Some examples of legal names are Number_hits, temp99, and _name.\n    </p>\n    </article>\n    </section>\n    );\n\n  }\n}\nexport default Jsx;\n"],"sourceRoot":""}