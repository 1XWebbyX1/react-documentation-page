{"version":3,"sources":["components/articles/article10.jsx"],"names":["Jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","class","React","Component"],"mappings":"wJAGMA,mLAEF,OACKC,EAAAC,EAAAC,cAAA,WAASC,GAAG,oBAAoBC,MAAM,gBAC3CJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,YAAd,uBAEAJ,EAAAC,EAAAC,cAAA,8MAGAF,EAAAC,EAAAC,cAAA,yFAHA,8TASAF,EAAAC,EAAAC,cAAA,2HAGAF,EAAAC,EAAAC,cAAA,iMAZA,sLAqBoL,UArBpL,6GAuBAF,EAAAC,EAAAC,cAAA,iJAvBA,2MA+BAF,EAAAC,EAAAC,cAAA,8DA/BA,uJAoCAF,EAAAC,EAAAC,cAAA,yEA1CcG,IAAMC,WAmDTP","file":"static/js/11.02ef7242.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Jsx extends React.Component{\n  render(){\n    return(\n         <section id=\"if-else_statement\" class=\"main-section\">\n    <header class=\"header11\">if...else statement</header>\n\n    <article>\n    Use the if statement to execute a statement if a logical condition is true. Use the optional else clause to execute a statement if the condition is false. An if statement looks as follows:\n\n    <code>{`if (condition) {\n    statement_1;\n    } else {\n    statement_2;\n    }`}</code>\n    condition can be any expression that evaluates to true or false. See Boolean for an explanation of what evaluates to true and false. If condition evaluates to true, statement_1 is executed; otherwise, statement_2 is executed. statement_1 and statement_2 can be any statement, including further nested if statements.\n    <p>\n    You may also compound the statements using else if to have multiple conditions tested in sequence, as follows:\n    </p>\n    <code>{`if (condition_1) {\n    statement_1;\n    } else if (condition_2) {\n    statement_2;\n    } else if (condition_n) {\n    statement_n;\n    } else {\n    statement_last;\n    } `}</code>\n    In the case of multiple conditions only the first logical condition which evaluates to true will be executed. To execute multiple statements, group them within a block statement ({'{ ... }'}') . In general, it's good practice to always use block statements, especially when nesting if statements:\n\n    <code>{`if (condition) {\n    statement_1_runs;\n    statement_2_runs;\n    } else {\n    statement_3_runs;\n    statement_4_runs;\n    }`}</code>\n    It is advisable to not use simple assignments in a conditional expression, because the assignment can be confused with equality when glancing over the code. For example, do not use the following code:\n    <code>{`if (x = y) {\n    /* statements here */\n    }`}</code>\n    If you need to use an assignment in a conditional expression, a common practice is to put additional parentheses around the assignment. For example:\n\n    <code>{`if ((x = y)) {\n    /* statements here */\n    }`}</code>\n    </article>\n    </section>\n  );\n  }\n}\n\nexport default Jsx;\n"],"sourceRoot":""}